# .github/workflows/expression.yml
name: Expressions â€” Fixed

on:
  push:
    branches: [ "main" ]

env:
  GLOBAL_GREETING: "hello from env"

jobs:
  demo:
    runs-on: ubuntu-latest
    outputs:
      branch-short: ${{ steps.get-branch.outputs.branch_short }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show basic contexts
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "Actor: ${{ github.actor }}"
          echo "Event name: ${{ github.event_name }}"
          echo "Full ref: ${{ github.ref }}"
          echo "Full SHA: ${{ github.sha }}"

      # -----------------------
      # String transforms in shell (NOT in YAML expressions)
      # -----------------------
      - name: String transforms (shell)
        id: str-trans
        run: |
          # do transformations in the shell (bash) and export them as step outputs
          upper=$(echo "hello world" | tr '[:lower:]' '[:upper:]')
          lower=$(echo "HeLLo" | tr '[:upper:]' '[:lower:]')
          branch_full="${GITHUB_REF:-${{ github.ref }}}"
          branch_short="${branch_full#refs/heads/}"
          echo "upper=$upper" >> $GITHUB_OUTPUT
          echo "lower=$lower" >> $GITHUB_OUTPUT
          echo "branch_full=$branch_full" >> $GITHUB_OUTPUT
          echo "branch_short=$branch_short" >> $GITHUB_OUTPUT

      - name: Use string transform outputs
        run: |
          echo "Uppercase (from shell): ${{ steps.str-trans.outputs.upper }}"
          echo "Lowercase (from shell): ${{ steps.str-trans.outputs.lower }}"
          echo "Short branch: ${{ steps.str-trans.outputs.branch_short }}"

      # -----------------------
      # Use supported expression functions (contains, startsWith, hashFiles)
      # -----------------------
      - name: Expression examples (supported)
        run: |
          echo "refs/heads main? ${{ startsWith(github.ref, 'refs/heads/main') }}"
          echo "Commit message contains WIP? ${{ contains(github.event.head_commit.message, 'WIP') }}"
          echo "Hash of package.json: ${{ hashFiles('**/package.json') }}"

      # -----------------------
      # Arithmetic / slicing in shell
      # -----------------------
      - name: Arithmetic & short SHA (shell)
        id: compute
        run: |
          sum=$((5 + 3))
          short_sha="${GITHUB_SHA:0:7}"
          echo "sum=$sum" >> $GITHUB_OUTPUT
          echo "short_sha=$short_sha" >> $GITHUB_OUTPUT

      - name: Show computed values
        run: |
          echo "Sum from shell: ${{ steps.compute.outputs.sum }}"
          echo "Short SHA from shell: ${{ steps.compute.outputs.short_sha }}"

      # -----------------------
      # Conditional step using expressions (works in YAML)
      # -----------------------
      - name: Run only if commit message includes [deploy]
        if: contains(github.event.head_commit.message, '[deploy]')
        run: echo "Deploy tag present in commit message"

      - name: Run only for release/* (and non-bot)
        if: startsWith(github.ref, 'refs/heads/release/') && !contains(github.actor, 'bot')
        run: echo "Release push by non-bot actor"

      # -----------------------
      # failure(), always()
      # -----------------------
      - name: Step that fails intentionally (demo)
        id: fail-step
        run: |
          echo "This step will fail for the demo"
          exit 1
        continue-on-error: true

      - name: Run only when something failed earlier in the job
        if: failure()
        run: echo "A previous step failed."

      - name: Always run (cleanup)
        if: always()
        run: echo "Always runs (cleanup)"

      # -----------------------
      # Produce job output for downstream jobs
      # -----------------------
      - name: Set job outputs for consumer jobs
        id: get-branch
        run: |
          echo "branch_short=${{ steps.str-trans.outputs.branch_short }}" >> $GITHUB_OUTPUT
